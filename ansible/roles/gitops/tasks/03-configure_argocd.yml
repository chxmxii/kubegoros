- name: Patch ArgoCD service to NodePort
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: argocd-server
        namespace: "{{ argocd_namespace }}"
      spec:
        type: NodePort

- name: Get HTTPS NodePort
  k8s_info:
    kind: Service
    name: argocd-server
    namespace: "{{ argocd_namespace }}"
  register: argocd_service

- name: Set HTTPS NodePort fact
  set_fact:
    argocd_https_server_nodeport: "{{ argocd_service.resources[0].spec.ports | selectattr('name', 'equalto', 'https') | map(attribute='nodePort') | first }}"

- name: Get the node name where ArgoCD server is running
  shell: >
    kubectl get pods -n {{ argocd_namespace }} -ojson | \
    jq -r '.items[] | select(.metadata.name | test("^argocd-server")).spec.nodeName'
  register: argocd_pods

- name: Set node where ArgoCD server is running fact
  set_fact:
    argocd_server_node: "{{ argocd_pods.stdout }}"

- name: Get initial admin password
  k8s_info:
    api_version: v1
    kind: Secret
    name: argocd-initial-admin-secret
    namespace: "{{ argocd_namespace }}"
  register: argocd_init_secret

- name: Get Current admin password hash if exist
  k8s_info:
    api_version: v1
    kind: Secret
    name: argocd-secret
    namespace: "{{ argocd_namespace }}"
  register: argocd_secret
  ignore_errors: true

- name: Set initial admin password fact
  set_fact:
    argocd_initial_password: "{{ argocd_init_secret.resources[0].data.password | b64decode }}"

#The following tasks will help ansible to decide whether to changed the argocd admin password or not.
- name: Set Current admin password hash fact
  set_fact:
    argocd_current_password_hash: "{{ argocd_secret.resources[0].data['admin.password'] | b64decode }}"

- name: Hash the new password argocd password with bcrypt
  set_fact:
    argocd_new_password_hash: "{{ argocd_new_password | password_hash('bcrypt', ident='2a') }}"
- debug:
    var: argocd_current_password_hash
- debug:
    var: argocd_new_password_hash

- name: Compare the current and the new admin password Hash
  set_fact: 
    password_change_needed: "{{ argocd_new_password_hash == argocd_current_password_hash  }}" 

- debug:
    var: password_change_needed

- name: Login to ArgoCD 
  uri:
    url: "https://{{ argocd_server_node }}:{{ argocd_https_server_nodeport }}/api/v1/session"
    method: POST
    body_format: json
    headers:
      Content-Type: "application/json"
    body:
      username: admin
      password: "{{ argocd_initial_password }}"
    return_content: yes
    status_code: 200
    validate_certs: no
  register: login_response
  changed_when: false

- name: Extract and set argocd token fact from login response
  set_fact:
    argocd_token: "{{ login_response.json.token }}"

- name: Change initial admin password
  uri:
    url: "https://{{ argocd_server_node }}:{{ argocd_https_server_nodeport }}/api/v1/account/password"
    method: PUT
    body_format: json
    headers:
      Authorization: "Bearer {{ argocd_token }}"
    body:
      currentPassword: "{{ argocd_initial_password }}"
      newPassword: "{{ argocd_new_password }}"
    status_code: 200
    validate_certs: no
  changed_when: false
